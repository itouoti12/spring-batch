<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:mybatis="http://mybatis.org/schema/mybatis-spring" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
    xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:p="http://www.springframework.org/schema/p" xmlns:batch="http://www.springframework.org/schema/batch"
    xmlns:c="http://www.springframework.org/schema/c" xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="
        http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
    ">

    <!-- ジョブ起動用クラス -->
    <bean id="jobLauncherTestUtils" class="org.springframework.batch.test.JobLauncherTestUtils" />

    <!-- @Transactionalアノテーションを使ったトランザクション管理 -->
    <tx:annotation-driven transaction-manager="transactionManager" />

    <!-- datasource設定 -->
    <bean id="log4jDataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
        <constructor-arg index="0" ref="jobDataSource" />
    </bean>

    <!-- spring-test-dbunitを使うときは以下のようにdataSourceをラップする -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy">
        <constructor-arg index="0" ref="log4jDataSource" />
    </bean>

    <!-- jdbcTemplateの設定 -->
    <bean class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg ref="dataSource" />
    </bean>

    <!-- DI時に前処理を追加する -->
    <bean class="itouoti.spring.batch.testCommon.servicePostProcessor.ServicePostProcessor" />

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
        <property name="rollbackOnCommitFailure" value="true" />
    </bean>

    <bean id="dbUnitDatabaseConfig" class="com.github.springtestdbunit.bean.DatabaseConfigBean">
        <property name="datatypeFactory">
            <bean class="org.dbunit.ext.postgresql.PostgresqlDataTypeFactory" />
        </property>
        <!-- 複数スキーマを用いる -->
        <!-- エクセルのシートに「スキーマ.テーブル名」でデータを指定 -->
    <!-- <property name="qualifiedTableNames" value="true" /> -->
        <!-- 単一スキーマの場合 -->
        <!-- エクセルのシートに「テーブル名」でデータを指定 -->
        <property name="caseSensitiveTableNames" value="true" />

        <!-- setData.xslxの空文字フィールドの設定を許可する -->
        <property name="allowEmptyFields" value="true" />
    </bean>

    <!-- dataSourceのデフォルトのスキーマを設定 -->
    <bean id="dbUnitDatabaseConnection" class="com.github.springtestdbunit.bean.DatabaseDataSourceConnectionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="databaseConfig" ref="dbUnitDatabaseConfig" />
        <property name="schema" value="${database.defaultSchema}" />
    </bean>

    <!-- launch-context.xmlのjobSqlSessionFactoryを上書きする -->
    <bean id="jobSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" p:dataSource-ref="dataSource">
        <property name="configLocation" value="classpath:/META-INF/mybatis/mybatis-config.xml" />
    </bean>
</beans>